name: Deploy Laravel to EC2

on:
  push:
    branches:
      - main  # replace with your branch name

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Whitelist GitHub Actions IP
        uses: bbharathkumarreddy/aws-whitelist-ip@v1.0
        with:
          security-group-id: sg-0bf39fb30181489f6
          action: whitelist
          port: 22
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Copy project files to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "."
          target: ${{ secrets.DEPLOY_PATH }}

      - name: SSH - Install & Setup Laravel
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd ${{ secrets.DEPLOY_PATH }}
            
            # Set proper permissions for Laravel directories
            sudo chown -R www-data:www-data storage bootstrap/cache
            sudo chmod -R 775 storage bootstrap/cache
            
            # Set permissions for public directory (if needed for file uploads)
            sudo chown -R www-data:www-data public/storage
            sudo chmod -R 775 public/storage
            
            # Ensure .env file has proper permissions (commented out as per your preference)
            # sudo chown www-data:www-data .env
            # sudo chmod 644 .env
            
            # Install dependencies
            composer install --no-interaction --prefer-dist --optimize-autoloader
            
            # Create storage link and ensure directories exist
            php artisan storage:link
            
            # Run Laravel commands
            php artisan migrate
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache
            php artisan optimize
            
            # Start queue worker
            php artisan queue:work

      - name: Remove GitHub Actions IP
        uses: bbharathkumarreddy/aws-whitelist-ip@v1.0
        with:
          security-group-id: sg-0bf39fb30181489f6
          action: remove
          port: 22
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

